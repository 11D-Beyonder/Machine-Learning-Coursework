while True:
    error = E(X, Y, theta, gamma, V, W)
    errors.append(error)
    # 与上一次的误差相差在阈值内
    if len(errors) > 1 and np.abs(error - errors[len(errors) - 2]) <= eps:
        break
    for k in range(m):
        x = X[k]
        y = Y[k]
        # 计算中间值
        alpha = np.dot(x, V)
        b = sigmoid(alpha - gamma)
        beta = np.dot(b, W)
        y_hat = sigmoid(beta - theta)
        g = y_hat * (1 - y_hat) * (y - y_hat)
        e = b * (1 - b) * np.dot(g, W.T)
        # 更新
        W += eta * (b.reshape((q, 1)) @ g.reshape((1, l)))
        theta -= eta * g
        V += eta * (x.reshape((d, 1)) @ e.reshape((1, q)))
        gamma -= eta * e